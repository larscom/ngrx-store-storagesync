name: 'master'

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*.*.*'

jobs:
  app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install packages
        run: npm ci --ignore-scripts
      - name: Unit test
        run: npm run test:ci
      - name: Build app
        run: npm run build:app-prerender
      - name: Upload app
        uses: actions/upload-artifact@v2
        with:
          name: ngrx-store-storagesync-app
          path: dist

  app-docker:
    needs:
      - app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Download app
        uses: actions/download-artifact@v2
        with:
          name: ngrx-store-storagesync-app
          path: dist
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1
      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ngrx-store-storagesync-app:latest
          outputs: type=docker,dest=/tmp/ngrx-store-storagesync-app.tar
      - name: Upload docker image
        uses: actions/upload-artifact@v2
        with:
          name: ngrx-store-storagesync-app
          path: /tmp/ngrx-store-storagesync-app.tar

  e2e:
    needs:
      - app-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Download docker image
        uses: actions/download-artifact@v2
        with:
          name: ngrx-store-storagesync-app
          path: /tmp
      - name: Load docker image
        run: |
          docker load --input /tmp/ngrx-store-storagesync-app.tar
          docker image ls -a
      - name: Run app container
        uses: addnab/docker-run-action@v3
        with:
          image: ngrx-store-storagesync-app:latest
          docker_network: host
          options: -p 127.0.0.1:80:80 -d
          run: nginx -g "daemon off;"
      - name: Smoke test
        run: sleep 2 && curl http://127.0.0.1
      - name: Automated test
        uses: addnab/docker-run-action@v3
        with:
          image: ppodgorsek/robot-framework:3.8.0
          docker_network: host
          options: --user=1001:121 -e ROBOT_UID=1001 -e ROBOT_GID=121 -e BASE_RUL=http://127.0.0.1 -v ${{ github.workspace }}/e2e/tests:/opt/robotframework/tests -v ${{ github.workspace }}/e2e/reports:/opt/robotframework/reports
          run: |
            ls -ltra /opt/robotframework/tests
            run-tests-in-virtual-screen.sh
      - name: Upload test reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: reports
          path: ${{ github.workspace }}/e2e/reports

  lib:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install packages
        run: npm ci --ignore-scripts
      - name: Unit test
        run: |
          npm run test:ci
          $(npm bin)/codecov -f coverage/*.json
      - name: Build lib
        run: npm run build:lib
      - name: Upload lib
        uses: actions/upload-artifact@v2
        with:
          name: ngrx-store-storagesync
          path: dist/ngrx-store-storagesync

  npm:
    needs:
      - lib
      - e2e
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Download lib
        uses: actions/download-artifact@v2
        with:
          name: ngrx-store-storagesync
          path: /tmp/ngrx-store-storagesync
      - name: Publish lib
        run: |
          cd /tmp/ngrx-store-storagesync
          ls -ltra /tmp/ngrx-store-storagesync
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

  firebase:
    needs:
      - app
      - e2e
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Download app
        uses: actions/download-artifact@v2
        with:
          name: ngrx-store-storagesync-app
          path: dist
      - name: Firebase deploy
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
